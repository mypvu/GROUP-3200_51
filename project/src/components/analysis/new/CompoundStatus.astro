---
import "@/styles/global.css";
import HelperService from "@/logic/helper_service.ts";
const { type = "unknown" } = Astro.props;
const name = HelperService.getTypeDisplayName(type);
---

<style>
    .analysis-box {
        border: 2px solid #4b5563;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .analysis-box:hover {
        border-color: #3b82f6;
    }

    #status {
        text-transform: uppercase;
    }
</style>

<div class="analysis-box bg-white p-6">
    <compound-status data-type={type}>
        <div class="flex items-center justify-between">
            <div>
                <h3 class="text-2xl font-bold text-gray-800">{name}</h3>
                <p id="status" class="mt-1 font-bold text-red-500">INCOMPLETE</p>
            </div>
            <a
                href={`/analysis/new/details/${type}`}
                class="btn-hover-effect rounded bg-blue-500 px-4 py-2 font-semibold text-white hover:bg-blue-600"
            >
                Edit
            </a>
        </div>
    </compound-status>
</div>

<script>
    import InputService from "@/logic/input_service.ts";
    import type { InputParams } from "@core/models/search_parameters.model.ts";

    class CompoundStatus extends HTMLElement {
        async connectedCallback() {
            const type = this.dataset.type;
            let status = this.querySelector("#status")!;

            // Load input params from local storage
            let inputParams = await InputService.getInput();
            if (inputParams === undefined) {
                // result == Empty
                status.innerText = "Empty";
                return;
            }

            status.innerText = "Incomplete";
        }
    }

    customElements.define("compound-status", CompoundStatus);
</script>
