---
// src/pages/analysis-new.astro
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>New Analysis - HTPLC Compound Matcher</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <style>
      .btn-hover-effect {
        transition: all 0.3s ease;
      }
      .btn-hover-effect:hover {
        transform: translateY(-2px);
      }
      .analysis-box {
        border: 2px solid #10B981;
        border-radius: 8px;
        transition: all 0.3s ease;
        background: white;
        cursor: pointer;
      }
      .analysis-box:hover {
        border-color: #059669;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);
      }
      .analysis-box.selected {
        border-color: #3B82F6;
        background: #EFF6FF;
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        transform: scale(1.02);
      }
      .analysis-container {
        border: 2px solid #4B5563;
        border-radius: 12px;
        background: #F9FAFB;
      }
      .arrow-enabled {
        background-color: #3B82F6;
        border-color: #3B82F6;
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
      }
      .arrow-enabled:hover {
        transform: translateX(4px);
        background-color: #2563EB;
        border-color: #2563EB;
      }
    </style>
  </head>
  <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen p-4">
    <div class="max-w-6xl mx-auto">
      
      <!-- Save & Exit Button -->
      <div class="mb-6">
        <a href="/" class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-lg btn-hover-effect font-semibold inline-block">
          Save & Exit
        </a>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        
        <!-- Left Column - Notes Only -->
        <div class="lg:col-span-1">
          <!-- Notes Section -->
          <div class="bg-white rounded-lg p-6">
            <h3 class="text-xl font-bold text-gray-800 mb-4">Notes</h3>
            <textarea 
              class="w-full h-40 border border-gray-300 rounded p-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
              placeholder="Add notes about your analyses here..."
            ></textarea>
            <button class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded mt-3 w-full btn-hover-effect font-semibold">
              Save Notes
            </button>
          </div>
        </div>

        <!-- Right Column - Big Analysis Container with 4 Boxes -->
        <div class="lg:col-span-3">
          <div class="analysis-container p-6" id="analysis-container">
            <!-- Centered Title -->
            <h3 class="text-2xl font-bold text-gray-800 mb-6 text-center">New Analysis</h3>
            
            <!-- Grid of 4 Analysis Boxes -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 mb-8" id="analysis-grid">
              
              <!-- KDS + NP Box -->
              <div class="analysis-box p-6" data-type="kds-np">
                <div class="text-center">
                  <h4 class="text-xl font-bold text-gray-800 mb-2">KDS + NP</h4>
                  <p class="text-green-500 font-bold">COMPLETED</p>
                </div>
              </div>

              <!-- LDS + NP Box -->
              <div class="analysis-box p-6" data-type="lds-np">
                <div class="text-center">
                  <h4 class="text-xl font-bold text-gray-800 mb-2">LDS + NP</h4>
                  <p class="text-green-500 font-bold">COMPLETED</p>
                </div>
              </div>

              <!-- KDS + VS Box -->
              <div class="analysis-box p-6" data-type="kds-vs">
                <div class="text-center">
                  <h4 class="text-xl font-bold text-gray-800 mb-2">KDS + VS</h4>
                  <p class="text-green-500 font-bold">COMPLETED</p>
                </div>
              </div>

              <!-- LDS + VS Box -->
              <div class="analysis-box p-6" data-type="lds-vs">
                <div class="text-center">
                  <h4 class="text-xl font-bold text-gray-800 mb-2">LDS + VS</h4>
                  <p class="text-green-500 font-bold">COMPLETED</p>
                </div>
              </div>
            </div>

            <!-- Arrow Navigation -->
            <div class="text-center">
              <div id="next-arrow" class="inline-flex items-center justify-center w-12 h-12 rounded-full border-2 arrow-enabled">
                <span class="text-2xl font-bold">â†’</span>
              </div>
              <p id="arrow-message" class="text-sm text-green-600 mt-2 font-semibold">Click arrow to view results</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="text-center py-6 text-gray-500 text-sm mt-8">
      <p>HTPLC Compound Matcher v1.0 | New Analysis</p>
    </footer>

    <script>
      // Wait for DOM to be fully loaded
      document.addEventListener('DOMContentLoaded', function() {
        let selectedAnalysis = null;
        const arrow = document.getElementById('next-arrow');
        const message = document.getElementById('arrow-message');
        const analysisContainer = document.getElementById('analysis-container');
        
        // Function to deselect all boxes
        function deselectAllBoxes() {
          document.querySelectorAll('.analysis-box').forEach(b => {
            b.classList.remove('selected');
          });
          selectedAnalysis = null;
        }
        
        // Add click event listeners to all analysis boxes
        document.querySelectorAll('.analysis-box').forEach(box => {
          box.addEventListener('click', function(e) {
            // Stop event from bubbling to the container
            e.stopPropagation();
            
            // If clicking the already selected box, deselect it
            if (this.classList.contains('selected')) {
              deselectAllBoxes();
              return;
            }
            
            // Remove selection from all boxes
            document.querySelectorAll('.analysis-box').forEach(b => {
              b.classList.remove('selected');
            });
            
            // Add selection to clicked box
            this.classList.add('selected');
            selectedAnalysis = this.getAttribute('data-type');
          });
        });
        
        // Click anywhere on the page to deselect
        document.addEventListener('click', function(e) {
          // Only deselect if clicking outside analysis boxes
          const clickedBox = e.target.closest('.analysis-box');
          if (!clickedBox) {
            deselectAllBoxes();
          }
        });
        
        // Arrow click handler - always enabled for completed analyses
        arrow.addEventListener('click', function(e) {
          // Navigate to results page (since all analyses are completed)
          window.location.href = `/results`;
        });
      });
    </script>
  </body>
</html>